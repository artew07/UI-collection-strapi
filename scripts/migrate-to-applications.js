const fs = require('fs');
const path = require('path');

async function migrateData() {
  console.log('üöÄ Starting migration from app-thumbnail to application...');
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ Content Type
    const oldApps = await strapi.entityService.findMany('api::app-thumbnail.app-thumbnail', {
      populate: ['image', 'logo', 'screenshots', 'categories']
    });
    
    console.log(`üìä Found ${oldApps.length} app-thumbnails to migrate`);
    
    // 2. –ú–∏–≥—Ä–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
    for (const oldApp of oldApps) {
      const newAppData = {
        title: oldApp.name || 'Untitled App',
        description: oldApp.description || '',
        release_date: oldApp.published_date || null,
        preview_images: oldApp.image || [],
        app_logo: oldApp.logo || null,
        app_screenshots: oldApp.screenshots || [],
        categories: oldApp.categories || [],
        platform: 'web', // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        status: 'published',
        featured: false,
        publishedAt: oldApp.publishedAt || new Date()
      };
      
      // 3. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
      const newApp = await strapi.entityService.create('api::application.application', {
        data: newAppData,
        populate: ['preview_images', 'app_logo', 'app_screenshots', 'categories']
      });
      
      console.log(`‚úÖ Migrated: ${oldApp.name} ‚Üí ${newApp.title} (ID: ${newApp.id})`);
    }
    
    console.log('üéâ Migration completed successfully!');
    
    // 4. –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const backupData = {
      timestamp: new Date().toISOString(),
      migratedCount: oldApps.length,
      oldData: oldApps
    };
    
    fs.writeFileSync(
      path.join(__dirname, '../migration-backup.json'),
      JSON.stringify(backupData, null, 2)
    );
    
    console.log('üì¶ Backup created: migration-backup.json');
    
  } catch (error) {
    console.error('‚ùå Migration failed:', error);
    throw error;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Strapi
module.exports = { migrateData };

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  console.log('‚ö†Ô∏è  Run this script through Strapi CLI:');
  console.log('npm run strapi script migrate-to-applications.js');
} 